{"ast":null,"code":"var _jsxFileName = \"/Users/leighmartin/Desktop/react-tetris/src/components/Tetris.js\";\nimport React, { useState } from 'react'; // Styled Components\n\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris'; // Custom Hooks\n\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage'; // Components\n\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [player] = usePlayer();\n  const [stage, setStage] = useStage(player);\n  console.log('re-render');\n  return React.createElement(StyledTetrisWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(StyledTetris, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Stage, {\n    stage: stage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Display, {\n    text: \"Score\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Display, {\n    text: \"Rows\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Display, {\n    text: \"Level\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(StartButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))));\n};\n\nexport default Tetris;","map":{"version":3,"sources":["/Users/leighmartin/Desktop/react-tetris/src/components/Tetris.js"],"names":["React","useState","StyledTetrisWrapper","StyledTetris","usePlayer","useStage","Stage","Display","StartButton","Tetris","dropTime","setDropTime","gameOver","setGameOver","player","stage","setStage","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,uBAAlD,C,CAEA;;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,QAAT,QAAyB,mBAAzB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAAEa,MAAF,IAAYV,SAAS,EAA3B;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACS,MAAD,CAAlC;AAGAG,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAEA,SACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEH,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAFJ,EAOA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,CAFJ,CADJ,CADJ;AAgBH,CA1BD;;AA4BA,eAAeN,MAAf","sourcesContent":["import React, { useState } from 'react';\n\n// Styled Components\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris' ;\n\n// Custom Hooks\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = () => {\n    const [dropTime, setDropTime] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n\n    const [ player] = usePlayer();\n    const [stage, setStage] = useStage(player);\n\n\n    console.log('re-render');\n\n    return (\n        <StyledTetrisWrapper>\n            <StyledTetris>\n                <Stage stage={stage} />\n                <aside>\n                    \n                    <div>\n                        <Display text='Score' />\n                        <Display text='Rows' />\n                        <Display text='Level' />\n                    </div>\n                <StartButton />\n                </aside>\n            </StyledTetris>\n        </StyledTetrisWrapper>\n    );\n};\n\nexport default Tetris;"]},"metadata":{},"sourceType":"module"}