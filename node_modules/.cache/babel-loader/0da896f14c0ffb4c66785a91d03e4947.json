{"ast":null,"code":"var _jsxFileName = \"/Users/leighmartin/Desktop/react-tetris/src/components/Tetris.js\";\nimport React, { useState } from \"react\";\nimport { createStage, checkCollision } from \"../gameHelpers\"; // Styled Components\n\nimport { StyledTetrisWrapper, StyledTetris } from \"./styles/StyledTetris\"; // Custom Hooks\n\nimport { useInteral } from '../hooks/useInterval';\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport { useStage } from \"../hooks/useStage\"; // Components\n\nimport Stage from \"./Stage\";\nimport Display from \"./Display\";\nimport StartButton from \"./StartButton\";\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage] = useStage(player, resetPlayer);\n  console.log(\"re-render\");\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, {\n      x: dir,\n      y: 0\n    })) {\n      updatePlayerPos({\n        x: dir,\n        y: 0\n      });\n    }\n  };\n\n  const startGame = () => {\n    console.log(\"test\"); // Reset everything\n\n    setStage(createStage());\n    resetPlayer();\n    setGameOver(false);\n  };\n\n  const drop = () => {\n    if (!checkCollision(player, stage, {\n      x: 0,\n      y: 1\n    })) {\n      updatePlayerPos({\n        x: 0,\n        y: 1,\n        collided: false\n      });\n    } else {\n      // Game Over\n      if (player.pos.y < 1) {\n        console.log(\"GAME OVER!!!\");\n        setGameOver(true);\n        setDropTime(null);\n      }\n\n      updatePlayerPos({\n        x: 0,\n        y: 0,\n        collided: true\n      });\n    }\n  };\n\n  const dropPlayer = () => {\n    drop();\n  };\n\n  const move = ({\n    keyCode\n  }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      }\n    }\n  };\n\n  useInteral(() => {\n    drop();\n  }, drop);\n  return React.createElement(StyledTetrisWrapper, {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => move(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(StyledTetris, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Stage, {\n    stage: stage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, gameOver ? React.createElement(Display, {\n    gameOver: gameOver,\n    text: \"Game Over\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Display, {\n    text: \"Score\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(Display, {\n    text: \"Rows\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(Display, {\n    text: \"Level\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(StartButton, {\n    callback: startGame,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }))));\n};\n\nexport default Tetris;","map":{"version":3,"sources":["/Users/leighmartin/Desktop/react-tetris/src/components/Tetris.js"],"names":["React","useState","createStage","checkCollision","StyledTetrisWrapper","StyledTetris","useInteral","usePlayer","useStage","Stage","Display","StartButton","Tetris","dropTime","setDropTime","gameOver","setGameOver","player","updatePlayerPos","resetPlayer","playerRotate","stage","setStage","console","log","movePlayer","dir","x","y","startGame","drop","collided","pos","dropPlayer","move","keyCode","e"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { createStage, checkCollision } from \"../gameHelpers\";\n\n// Styled Components\nimport { StyledTetrisWrapper, StyledTetris } from \"./styles/StyledTetris\";\n\n// Custom Hooks\nimport { useInteral } from '../hooks/useInterval';\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport { useStage } from \"../hooks/useStage\";\n\n// Components\nimport Stage from \"./Stage\";\nimport Display from \"./Display\";\nimport StartButton from \"./StartButton\";\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage] = useStage(player, resetPlayer);\n\n  console.log(\"re-render\");\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n\nconst startGame = () => {\n    console.log(\"test\");\n    // Reset everything\n    setStage(createStage());\n    resetPlayer();\n    setGameOver(false);\n};\n\nconst drop = () => {\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n    updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      // Game Over\n    if (player.pos.y < 1) {\n        console.log(\"GAME OVER!!!\");\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const dropPlayer = () => {\n    drop();\n  };\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n          playerRotate(stage, 1);\n      }\n    }\n  };\n\n  useInteral(() => {\n      drop();\n  }, drop)\n\n  return (\n    <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)}>\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text=\"Game Over\" />\n          ) : (\n            <div>\n              <Display text=\"Score\" />\n              <Display text=\"Rows\" />\n              <Display text=\"Level\" />\n            </div>\n          )}\n          <StartButton callback={startGame} />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;\n"]},"metadata":{},"sourceType":"module"}