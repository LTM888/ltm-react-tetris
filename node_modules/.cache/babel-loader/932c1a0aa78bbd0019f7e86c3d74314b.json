{"ast":null,"code":"var _jsxFileName = \"/Users/leighmartin/Desktop/react-tetris/src/components/Tetris.js\";\nimport React, { useState } from 'react';\nimport { createState } from '../gameHelpers'; // Styled Components\n\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris'; // Custom Hooks\n\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage'; // Components\n\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [player] = usePlayer();\n  const [stage, setStage] = useStage(player);\n  console.log('re-render');\n\n  const movePlayer = dir => {};\n\n  const startGame = () => {};\n\n  const drop = () => {\n    updatePlayerPos({\n      x: 0,\n      y: 1,\n      collided: false\n    });\n  };\n\n  const dropPlayer = () => {\n    drop();\n  };\n\n  const move = ({\n    keyCode\n  }) => {\n    if (!gameOver) {\n      if (e.keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      }\n    }\n  };\n\n  return React.createElement(StyledTetrisWrapper, {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => move(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(StyledTetris, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Stage, {\n    stage: stage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, gameOver ? React.createElement(Display, {\n    gameOver: gameOver,\n    text: \"Game Over\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Display, {\n    text: \"Score\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Display, {\n    text: \"Rows\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Display, {\n    text: \"Level\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(StartButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))));\n};\n\nexport default Tetris;","map":{"version":3,"sources":["/Users/leighmartin/Desktop/react-tetris/src/components/Tetris.js"],"names":["React","useState","createState","StyledTetrisWrapper","StyledTetris","usePlayer","useStage","Stage","Display","StartButton","Tetris","dropTime","setDropTime","gameOver","setGameOver","player","stage","setStage","console","log","movePlayer","dir","startGame","drop","updatePlayerPos","x","y","collided","dropPlayer","move","keyCode","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,WAAT,QAA4B,gBAA5B,C,CAEA;;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,uBAAlD,C,CAEA;;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,QAAT,QAAyB,mBAAzB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAAEc,MAAF,IAAYV,SAAS,EAA3B;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACS,MAAD,CAAlC;AAGAG,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AAGA,QAAMC,UAAU,GAAGC,GAAG,IAAI,CAEzB,CAFD;;AAKA,QAAMC,SAAS,GAAG,MAAM,CAEvB,CAFD;;AAIA,QAAOC,IAAI,GAAG,MAAM;AAChBC,IAAAA,eAAe,CAAC;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAC,CAAV;AAAcC,MAAAA,QAAQ,EAAE;AAAxB,KAAD,CAAf;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrBL,IAAAA,IAAI;AACP,GAFD;;AAIA,QAAMM,IAAI,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAe;AACxB,QAAI,CAACjB,QAAL,EAAe;AACX,UAAGkB,CAAC,CAACD,OAAF,KAAe,EAAlB,EAAsB;AAClBV,QAAAA,UAAU,CAAC,CAAC,CAAF,CAAV;AACH,OAFD,MAEO,IAAIU,OAAO,KAAK,EAAhB,EAAoB;AACvBV,QAAAA,UAAU,CAAC,CAAD,CAAV;AACH,OAFM,MAEA,IAAIU,OAAO,KAAK,EAAhB,EAAoB;AACvBF,QAAAA,UAAU;AACb;AACJ;AACJ,GAVD;;AAcA,SACI,oBAAC,mBAAD;AAAqB,IAAA,IAAI,EAAE,QAA3B;AAAoC,IAAA,QAAQ,EAAC,GAA7C;AAAiD,IAAA,SAAS,EAAEG,CAAC,IAAIF,IAAI,CAACE,CAAD,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEf,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QAAQ,GACL,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEA,QAAnB;AAA6B,IAAA,IAAI,EAAC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAJJ,EAUA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVA,CAFJ,CADJ,CADJ;AAmBH,CA7DD;;AA+DA,eAAeH,MAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport { createState } from '../gameHelpers';\n\n// Styled Components\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris' ;\n\n// Custom Hooks\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = () => {\n    const [dropTime, setDropTime] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n\n    const [ player] = usePlayer();\n    const [stage, setStage] = useStage(player);\n\n\n    console.log('re-render');\n\n\n    const movePlayer = dir => {\n\n    }\n\n\n    const startGame = () => {\n        \n    }\n\n    const  drop = () => {\n        updatePlayerPos({ x: 0, y:1 , collided: false})\n    }\n\n    const dropPlayer = () => {\n        drop();\n    }\n\n    const move = ({keyCode}) => {\n        if (!gameOver) {\n            if(e.keyCode  === 37) {\n                movePlayer(-1);\n            } else if (keyCode === 39) {\n                movePlayer(1);\n            } else if (keyCode === 40) {\n                dropPlayer();\n            }\n        }\n    }\n\n\n\n    return (\n        <StyledTetrisWrapper role= 'button' tabIndex='0' onKeyDown={e => move(e)}>\n            <StyledTetris>\n                <Stage stage={stage} />\n                <aside>\n                    {gameOver ? (\n                        <Display gameOver={gameOver} text=\"Game Over\" />\n                    ) : ( \n                    <div>\n                        <Display text='Score' />\n                        <Display text='Rows' />\n                        <Display text='Level' />\n                    </div>\n                    )}\n                <StartButton />\n                </aside>\n            </StyledTetris>\n        </StyledTetrisWrapper>\n    );\n};\n\nexport default Tetris;"]},"metadata":{},"sourceType":"module"}